<?xml version="1.0" encoding="UTF-8"?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="65c6c48d-d21d-4844-aa25-d6b4ce24afd2" version="0.0.6" api-version="6.0.0" allowed-operations="vef" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Find workflow to be called by Dispatcher]]></display-name>
  <position y="50.0" x="100.0"></position>
  <input>
    <param name="inboundRoutingKey" type="string"></param>
    <param name="inboundHeaders" type="Properties"></param>
    <param name="inboundProperties" type="Properties"></param>
    <param name="processWorkflowsResourceElement" type="ResourceElement"></param>
  </input>
  <output>
    <param name="workflowToCall" type="Workflow"></param>
    <param name="workflowToCallConfig" type="string"></param>
  </output>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="384.5"></position>
  </workflow-item>
  <workflow-item name="item1" out-name="item0" type="task">
    <display-name><![CDATA[search process workflows]]></display-name>
    <script encoded="false"><![CDATA[var resourceElementContent = processWorkflowsResourceElement.getContentAsMimeAttachment().content;

var allWorkflowConfigurations = JSON.parse(resourceElementContent);
//System.debug("allWorkflowConfigurations: " + allWorkflowConfigurations);
var workflowToCallConfigurations = [].concat(allWorkflowConfigurations.filter(function(element) {
			var source = element.runConditionSource;
			var value = element.runConditionValue;
			//add filter by amqp props or headers here if needed...
			return (source == "ROUTINGKEY" && inboundRoutingKey.search(new RegExp(escapeRegExp(value))) != -1 );
		}));
//System.debug("workflowToCallConfiguration: "  + workflowToCallConfigurations);

if (workflowToCallConfigurations.length > 1 ) throw "More than one workflow found for routing Key " + inboundRoutingKey;
if (workflowToCallConfigurations.length < 1 ) throw "No workflow configured for routingkey " + inboundRoutingKey;

var workflowToCallConfig = workflowToCallConfigurations[0];
var workflowIdToCall = workflowToCallConfig.workflowToCall;
//System.debug("workflowIdToCall: " + workflowIdToCall);
workflowToCall = Server.getWorkflowWithId(workflowIdToCall);
workflowToCallConfigJson = JSON.stringify(workflowToCallConfig);
if (workflowToCall == null) throw "No workflow with id " + workflowIdToCall + " for routingKeyProcess '" + inboundRoutingKey + "' found in ResourceElement " + processWorkflowsResourceElement;

function escapeRegExp(stringToGoIntoTheRegex) {
    return stringToGoIntoTheRegex.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}]]></script>
    <in-binding>
      <bind name="inboundRoutingKey" type="string" export-name="inboundRoutingKey"></bind>
      <bind name="inboundHeaders" type="Properties" export-name="inboundHeaders"></bind>
      <bind name="inboundProperties" type="Properties" export-name="inboundProperties"></bind>
      <bind name="processWorkflowsResourceElement" type="ResourceElement" export-name="processWorkflowsResourceElement"></bind>
    </in-binding>
    <out-binding>
      <bind name="workflowToCall" type="Workflow" export-name="workflowToCall"></bind>
      <bind name="workflowToCallConfigJson" type="string" export-name="workflowToCallConfig"></bind>
    </out-binding>
    <position y="55.40909090909091" x="204.5"></position>
  </workflow-item>
  <presentation>
    <p-param name="inboundRoutingKey">
      <desc><![CDATA[inboundRoutingKey]]></desc>
    </p-param>
    <p-param name="inboundHeaders">
      <desc><![CDATA[inboundHeaders]]></desc>
    </p-param>
    <p-param name="inboundProperties">
      <desc><![CDATA[inboundProperties]]></desc>
    </p-param>
    <p-param name="processWorkflowsResourceElement">
      <desc><![CDATA[processWorkflowsResourceElement]]></desc>
    </p-param>
  </presentation>
</workflow>